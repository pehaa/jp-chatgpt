create table jp_support_sections (
  id bigserial primary key,
  title text,
  section_title text,
  url text,
  content text,
  content_tokens bigint,
  embedding vector (1536)
)


Enable RLS via supabase interface


create or replace function jp_search_sections (
  query_embedding vector (1536),
  similarity_threshold float,
  match_count int,
  min_content_length int
)
returns table (
  id bigint,
  title text,
  section_title text,
  url text,
  content text,
  content_tokens bigint,
  similarity float
)
language plpgsql
as $$
begin
  return query
  select
    jp_support_sections.id,
    jp_support_sections.title,
    jp_support_sections.section_title,
    jp_support_sections.url,
    jp_support_sections.content,
    jp_support_sections.content_tokens,
    1 - (jp_support_sections.embedding <=> query_embedding) as similarity
from jp_support_sections
where length(jp_support_sections.content) >= min_content_length
and (1 - (jp_support_sections.embedding <=> query_embedding)) > similarity_threshold

order by jp_support_sections.embedding <=> query_embedding
limit match_count;
end;
$$;

create index on jp_support_sections
using ivfflat (embedding vector_cosine_ops)
with (lists = 100);